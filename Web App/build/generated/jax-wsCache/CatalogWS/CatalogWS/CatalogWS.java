
package CatalogWS;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CatalogWS", targetNamespace = "http://CatalogWSModel/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CatalogWS {


    /**
     * 
     * @param filter
     * @param keyword
     * @param userId
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchProduct", targetNamespace = "http://CatalogWSModel/", className = "CatalogWS.SearchProduct")
    @ResponseWrapper(localName = "searchProductResponse", targetNamespace = "http://CatalogWSModel/", className = "CatalogWS.SearchProductResponse")
    @Action(input = "http://CatalogWSModel/CatalogWS/searchProductRequest", output = "http://CatalogWSModel/CatalogWS/searchProductResponse")
    public List<Object> searchProduct(
        @WebParam(name = "keyword", targetNamespace = "")
        String keyword,
        @WebParam(name = "filter", targetNamespace = "")
        String filter,
        @WebParam(name = "user_id", targetNamespace = "")
        String userId);

    /**
     * 
     * @param productId
     * @param userAgent
     * @param accessToken
     * @return
     *     returns int
     * @throws ParseException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "likeProduct", targetNamespace = "http://CatalogWSModel/", className = "CatalogWS.LikeProduct")
    @ResponseWrapper(localName = "likeProductResponse", targetNamespace = "http://CatalogWSModel/", className = "CatalogWS.LikeProductResponse")
    @Action(input = "http://CatalogWSModel/CatalogWS/likeProductRequest", output = "http://CatalogWSModel/CatalogWS/likeProductResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://CatalogWSModel/CatalogWS/likeProduct/Fault/IOException"),
        @FaultAction(className = ParseException_Exception.class, value = "http://CatalogWSModel/CatalogWS/likeProduct/Fault/ParseException")
    })
    public int likeProduct(
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken,
        @WebParam(name = "product_id", targetNamespace = "")
        String productId,
        @WebParam(name = "user_agent", targetNamespace = "")
        String userAgent)
        throws IOException_Exception, ParseException_Exception
    ;

    /**
     * 
     * @param productId
     * @param userAgent
     * @param accessToken
     * @return
     *     returns int
     * @throws ParseException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "dislikeProduct", targetNamespace = "http://CatalogWSModel/", className = "CatalogWS.DislikeProduct")
    @ResponseWrapper(localName = "dislikeProductResponse", targetNamespace = "http://CatalogWSModel/", className = "CatalogWS.DislikeProductResponse")
    @Action(input = "http://CatalogWSModel/CatalogWS/dislikeProductRequest", output = "http://CatalogWSModel/CatalogWS/dislikeProductResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://CatalogWSModel/CatalogWS/dislikeProduct/Fault/IOException"),
        @FaultAction(className = ParseException_Exception.class, value = "http://CatalogWSModel/CatalogWS/dislikeProduct/Fault/ParseException")
    })
    public int dislikeProduct(
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken,
        @WebParam(name = "product_id", targetNamespace = "")
        String productId,
        @WebParam(name = "user_agent", targetNamespace = "")
        String userAgent)
        throws IOException_Exception, ParseException_Exception
    ;

    /**
     * 
     * @param userAgent
     * @param accessToken
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws ParseException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "viewCatalog", targetNamespace = "http://CatalogWSModel/", className = "CatalogWS.ViewCatalog")
    @ResponseWrapper(localName = "viewCatalogResponse", targetNamespace = "http://CatalogWSModel/", className = "CatalogWS.ViewCatalogResponse")
    @Action(input = "http://CatalogWSModel/CatalogWS/viewCatalogRequest", output = "http://CatalogWSModel/CatalogWS/viewCatalogResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://CatalogWSModel/CatalogWS/viewCatalog/Fault/IOException"),
        @FaultAction(className = ParseException_Exception.class, value = "http://CatalogWSModel/CatalogWS/viewCatalog/Fault/ParseException")
    })
    public List<String> viewCatalog(
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken,
        @WebParam(name = "user_agent", targetNamespace = "")
        String userAgent)
        throws IOException_Exception, ParseException_Exception
    ;

}
