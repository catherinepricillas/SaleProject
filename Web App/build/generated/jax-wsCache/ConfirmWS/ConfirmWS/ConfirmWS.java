
package ConfirmWS;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ConfirmWS", targetNamespace = "http://ConfirmModel/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ConfirmWS {


    /**
     * 
     * @param productid
     * @param userAgent
     * @param accessToken
     * @return
     *     returns java.lang.String
     * @throws ParseException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProductData", targetNamespace = "http://ConfirmModel/", className = "ConfirmWS.GetProductData")
    @ResponseWrapper(localName = "getProductDataResponse", targetNamespace = "http://ConfirmModel/", className = "ConfirmWS.GetProductDataResponse")
    @Action(input = "http://ConfirmModel/ConfirmWS/getProductDataRequest", output = "http://ConfirmModel/ConfirmWS/getProductDataResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://ConfirmModel/ConfirmWS/getProductData/Fault/IOException"),
        @FaultAction(className = ParseException_Exception.class, value = "http://ConfirmModel/ConfirmWS/getProductData/Fault/ParseException")
    })
    public String getProductData(
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken,
        @WebParam(name = "productid", targetNamespace = "")
        String productid,
        @WebParam(name = "user_agent", targetNamespace = "")
        String userAgent)
        throws IOException_Exception, ParseException_Exception
    ;

    /**
     * 
     * @param fulladdress
     * @param quantity
     * @param consignee
     * @param productId
     * @param postalcode
     * @param phonenumber
     * @param userAgent
     * @param accessToken
     * @param creditcard
     * @param verification
     * @return
     *     returns int
     * @throws ParseException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "confirmPurchase", targetNamespace = "http://ConfirmModel/", className = "ConfirmWS.ConfirmPurchase")
    @ResponseWrapper(localName = "confirmPurchaseResponse", targetNamespace = "http://ConfirmModel/", className = "ConfirmWS.ConfirmPurchaseResponse")
    @Action(input = "http://ConfirmModel/ConfirmWS/confirmPurchaseRequest", output = "http://ConfirmModel/ConfirmWS/confirmPurchaseResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://ConfirmModel/ConfirmWS/confirmPurchase/Fault/IOException"),
        @FaultAction(className = ParseException_Exception.class, value = "http://ConfirmModel/ConfirmWS/confirmPurchase/Fault/ParseException")
    })
    public int confirmPurchase(
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken,
        @WebParam(name = "product_id", targetNamespace = "")
        String productId,
        @WebParam(name = "quantity", targetNamespace = "")
        String quantity,
        @WebParam(name = "consignee", targetNamespace = "")
        String consignee,
        @WebParam(name = "fulladdress", targetNamespace = "")
        String fulladdress,
        @WebParam(name = "postalcode", targetNamespace = "")
        String postalcode,
        @WebParam(name = "phonenumber", targetNamespace = "")
        String phonenumber,
        @WebParam(name = "creditcard", targetNamespace = "")
        String creditcard,
        @WebParam(name = "verification", targetNamespace = "")
        String verification,
        @WebParam(name = "user_agent", targetNamespace = "")
        String userAgent)
        throws IOException_Exception, ParseException_Exception
    ;

}
